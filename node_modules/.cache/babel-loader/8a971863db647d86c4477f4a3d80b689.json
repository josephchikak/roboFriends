{"ast":null,"code":"import _classCallCheck from \"/Users/JosephChikak/Desktop/roboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JosephChikak/Desktop/roboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JosephChikak/Desktop/roboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JosephChikak/Desktop/roboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JosephChikak/Desktop/roboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JosephChikak/Desktop/roboFriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport { robots } from '../components/robots.js';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { requestRobots, setSearchField } from '../action';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    ispending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearchField(event.target.value));\n    },\n    onRequestRobots: function onRequestRobots() {\n      return dispatch(requestRobots());\n    }\n  };\n};\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRequestRobots();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange,\n          robots = _this$props.robots,\n          isPending = _this$props.isPending;\n      var filteredRobots = robots.filter(function (robots) {\n        return robots.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n      return isPending ? /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }\n      }, \" Loading \") : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Cardlist, {\n        robots: filteredRobots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Component","Cardlist","robots","connect","SearchBox","Scroll","requestRobots","setSearchField","mapStateToProps","state","searchField","searchRobots","ispending","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","props","filteredRobots","filter","name","toLowerCase","includes"],"sources":["/Users/JosephChikak/Desktop/roboFriends/src/containers/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport {robots} from '../components/robots.js'\nimport {connect} from 'react-redux';\nimport SearchBox from '../components/Searchbox';\nimport Scroll from '../components/Scroll'\nimport './App.css';\nimport { requestRobots, setSearchField } from '../action';\n\nconst mapStateToProps = state => {\n    return {\n            searchField: state.searchRobots.searchField,\n            robots: state.requestRobots.robots,\n            ispending: state.requestRobots.isPending,\n            error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n        \n    }\n}\n\nclass App extends Component{\n   \n\n    componentDidMount(){\n            this.props.onRequestRobots();\n    }\n\n\n    render(){\n        const {searchField, onSearchChange, robots, isPending} = this.props;\n        const filteredRobots = robots.filter(robots =>{\n            return robots.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        return isPending ? <h1> Loading </h1>\n        :\n         (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n               \n                <SearchBox searchChange={onSearchChange}/>\n                <Scroll>\n                     <Cardlist robots={filteredRobots}/> \n                </Scroll>\n            </div>\n            ); \n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,WAA9C;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;EAC7B,OAAO;IACCC,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WADjC;IAECR,MAAM,EAAEO,KAAK,CAACH,aAAN,CAAoBJ,MAF7B;IAGCU,SAAS,EAAEH,KAAK,CAACH,aAAN,CAAoBO,SAHhC;IAICC,KAAK,EAAEL,KAAK,CAACH,aAAN,CAAoBQ;EAJ5B,CAAP;AAMH,CAPD;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;EACrC,OAAO;IACPC,cAAc,EAAE,wBAACC,KAAD;MAAA,OAAWF,QAAQ,CAACT,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB;IAAA,CADT;IAEPC,eAAe,EAAE;MAAA,OAAML,QAAQ,CAACV,aAAa,EAAd,CAAd;IAAA;EAFV,CAAP;AAKH,CAND;;IAQMgB,G;;;;;;;;;;;wCAGiB;MACX,KAAKC,KAAL,CAAWF,eAAX;IACP;;;6BAGO;MAAA,kBACqD,KAAKE,KAD1D;MAAA,IACGb,WADH,eACGA,WADH;MAAA,IACgBO,cADhB,eACgBA,cADhB;MAAA,IACgCf,MADhC,eACgCA,MADhC;MAAA,IACwCW,SADxC,eACwCA,SADxC;MAEJ,IAAMW,cAAc,GAAGtB,MAAM,CAACuB,MAAP,CAAc,UAAAvB,MAAM,EAAG;QAC1C,OAAOA,MAAM,CAACwB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmClB,WAAW,CAACiB,WAAZ,EAAnC,CAAP;MACH,CAFsB,CAAvB;MAGA,OAAOd,SAAS,gBAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,eAAH,gBAGZ;QAAK,SAAS,EAAC,IAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAI,SAAS,EAAC,IAAd;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,iBADJ,eAGI,oBAAC,SAAD;QAAW,YAAY,EAAEI,cAAzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAHJ,eAII,oBAAC,MAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACK,oBAAC,QAAD;QAAU,MAAM,EAAEO,cAAlB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADL,CAJJ,CAHJ;IAYH;;;;EAzBaxB,S;;AA6BlB,eAAeG,OAAO,CAACK,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf"},"metadata":{},"sourceType":"module"}